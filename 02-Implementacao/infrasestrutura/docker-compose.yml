version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: focus_postgres
    environment:
      POSTGRES_DB: focus_textil
      POSTGRES_USER: focus_user
      POSTGRES_PASSWORD: focus_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../backend/database/init:/docker-entrypoint-initdb.d
    networks:
      - focus_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: focus_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - focus_network
    command: redis-server --appendonly yes

  # Backend API
  backend:
    build:
      context: ../backend
      dockerfile: ../infrasestrutura/Dockerfile
    container_name: focus_backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: focus_textil
      DB_USER: focus_user
      DB_PASSWORD: focus_password_2024
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: focus_jwt_secret_2024_development
    depends_on:
      - postgres
      - redis
    volumes:
      - ../backend:/app
      - /app/node_modules
    networks:
      - focus_network
    command: npm run dev

  # Frontend React
  frontend:
    build:
      context: ../frontend
      dockerfile: ../infrasestrutura/Dockerfile.front
    container_name: focus_frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      REACT_APP_ENV: development
    volumes:
      - ../frontend:/app
      - /app/node_modules
    networks:
      - focus_network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  focus_network:
    driver: bridge